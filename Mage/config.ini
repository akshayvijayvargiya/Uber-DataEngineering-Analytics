version: 0.1.1
default:
  # Default profile created for data IO access.
  # Add your credentials for the source you use, and delete the rest.
  # AWS
  AWS_ACCESS_KEY_ID: "{{ env_var('AWS_ACCESS_KEY_ID') }}"
  AWS_SECRET_ACCESS_KEY: "{{ env_var('AWS_SECRET_ACCESS_KEY') }}"
  AWS_SESSION_TOKEN: session_token (Used to generate Redshift credentials)
  AWS_REGION: region
  # Azure
  AZURE_CLIENT_ID: "{{ env_var('AZURE_CLIENT_ID') }}"
  AZURE_CLIENT_SECRET: "{{ env_var('AZURE_CLIENT_SECRET') }}"
  AZURE_STORAGE_ACCOUNT_NAME: "{{ env_var('AZURE_STORAGE_ACCOUNT_NAME') }}"
  AZURE_TENANT_ID: "{{ env_var('AZURE_TENANT_ID') }}"
  # Clickhouse
  CLICKHOUSE_DATABASE: default
  CLICKHOUSE_HOST: host.docker.internal
  CLICKHOUSE_INTERFACE: http
  CLICKHOUSE_PASSWORD: null
  CLICKHOUSE_PORT: 8123
  CLICKHOUSE_USERNAME: null
  # Druid
  DRUID_HOST: hostname
  DRUID_PASSWORD: password
  DRUID_PATH: /druid/v2/sql/
  DRUID_PORT: 8082
  DRUID_SCHEME: http
  DRUID_USER: user
  # Google
  GOOGLE_SERVICE_ACC_KEY:
    type: service_account
    project_id: "akshay-project1-397423"
    private_key_id: "f5c78eb865102ee80145f12d3e075e12e931906a"
    private_key: "-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC/05RbecQyERRr\nBmW5XKbAT2KvFkvvVxvaM+3S1YPgRI0PVV0LhCtgtlvWlZ/zmhKP4RVbMS28RzkQ\nmYOxtqgzvJYKwu1v4AcjDzIN5BQ8Yl1myoANJrOa4yfdQMz+PJRM91yW7pL5RSta\nKB9RrK5oyvauKW0di7zR5t3bUj04lpRYX2P/OhfuzLC86wKBJnXyRFmUzvCy42ge\n3DjKtwiMlrmwFjLQQOCJ0Wv7g6G6lmMFicvaylpisLgabli5Lie+vY7XgIezT3rh\n5ZT4aB3Xlg4vpDrk1mVHNLjmrZ9S4MpqpEOyEOIhQn6XUjFUL0jN/ugWx71Z+mIy\nnPbFs6hpAgMBAAECggEAFDKecd1J262xtS0ow9IuGpyhOudBmpNU8u450dO6fYAq\nTB2EXQSPHrFEzTzW6SrlXnHoMkBk3Oiw6P8I/0rIvh3SvJJWtstjZP0iG5VSziLb\nS8nxnrDfA2V8mo7KptBRGyOGg7veDNIMJQOJfKuOd6k7PQ5Ol2hRutYwsPmhSZZe\nOYJSk3IggaS4HicZ+7CTASy+e6Msb7hLxCjzDfDGQLJAUEEAaB7VuZOEO1wjJ31h\nMqreutcJ72AoajLyxfxmF/i4FK6SaftqqyBo2FOSlcT4l0n5IZMEXuUX6ZR8FJsP\nEtGnOBjcg7ebExiiQJpvYQkaSmTwBgZzpwTFZAm1EwKBgQD8s5asSUd8LK6R+iT6\nGVPrbnT9T6hef8t7aG1H2sHMv2cLXLHyju0/errWnGuujJkYEBoB/uylznyhF67i\nSZ/+1j1EjrNrI+13DaAig5nsZSOWBz2fbrUlcdzERjQnS/VpsRzmS1xeBLhpOSnd\nKqPeCEElspaSvMMBAoi/n08mywKBgQDCVJMk06gBLR7juRBpKrf4nWFgE79zzRTw\nUBajXi9JNrtpv52Ux7n9h+jwyZJk07VVMj0wilmfo8zQkMRcVtdVivarndzuPYMe\nuWPsvltWszgxQJ+5SX6cRKjkx3zWwV9lxlHGNuaAo8wIw+lldcaNm/f+BxpREYDY\n3pgpGLyTGwKBgQDw5hMhMspe6gmRR7GwaizCJ46HXUTYsWM9xhNHiJdvpJeLEVbi\nMLai6VDr/jn5MDdR5Sel92uJtQrCV110g1NvELVfgdowrRNXhzm9LU+zN8dw4n4w\nWs19YMpgobxeKd9OXnV6ZSUsy7sxNDlgiaGlrKDOWy2HvUL4132djzVZeQKBgQCH\nlLJEk1c32t8eSlPky+UnE8aIXb7JcGAXegkRWfjrv7/p+8JZty9Qb65ZsIjux7ZQ\nBokigKQe+Q1Axn/5XK1IBXgsLCukHE6K9RV+ayEW0Ft4IXpOr7QiGtUrKPM0ch24\nyDDtdghD4APOacFBBHbO/e570UDPJsMai9LleVi32QKBgQCz4yI7JQDOLiyHilND\nzHNUqXzSK4xdDpE/XFPXbp4mhaL0sA30g7J5MjdZf9nspKfEJrhjECoKQKvUe7uV\n6Uq0xDYXM+T7K2aEXVtsF7IHB7WcGCHN+6uSVaAITc3iF6KRsz1NT0VREOs1SlZD\nJZUNGibqv3fk992kZExYMsRb5Q==\n-----END PRIVATE KEY-----\n"
    client_email: "uber-dataengineering-akshay-pr@akshay-project1-397423.iam.gserviceaccount.com"
    auth_uri: "https://accounts.google.com/o/oauth2/auth"
    token_uri: "https://accounts.google.com/o/oauth2/token"
    auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs"
    client_x509_cert_url: "https://www.googleapis.com/robot/v1/metadata/x509/uber-dataengineering-akshay-pr%40akshay-project1-397423.iam.gserviceaccount.com"
  GOOGLE_SERVICE_ACC_KEY_FILEPATH: "/path/to/your/service/account/key.json"
  GOOGLE_LOCATION: US # Optional
  # MongoDB
  # Specify either the connection string or the (host, password, user, port) to connect to MongoDB.
  MONGODB_CONNECTION_STRING: "mongodb://{username}:{password}@{host}:{port}/"
  MONGODB_HOST: host
  MONGODB_PORT: 27017
  MONGODB_USER: user
  MONGODB_PASSWORD: password
  MONGODB_DATABASE: database
  MONGODB_COLLECTION: collection
  # MSSQL
  MSSQL_DATABASE: database
  MSSQL_SCHEMA: schema
  MSSQL_DRIVER: "ODBC Driver 18 for SQL Server"
  MSSQL_HOST: host
  MSSQL_PASSWORD: password
  MSSQL_PORT: 1433
  MSSQL_USER: SA
  # MySQL
  MYSQL_DATABASE: database
  MYSQL_HOST: host
  MYSQL_PASSWORD: password
  MYSQL_PORT: 3306
  MYSQL_USER: root
  # PostgresSQL
  POSTGRES_CONNECT_TIMEOUT: 10
  POSTGRES_DBNAME: postgres
  POSTGRES_SCHEMA: public # Optional
  POSTGRES_USER: username
  POSTGRES_PASSWORD: password
  POSTGRES_HOST: hostname
  POSTGRES_PORT: 5432
  # Redshift
  REDSHIFT_SCHEMA: public # Optional
  REDSHIFT_DBNAME: redshift_db_name
  REDSHIFT_HOST: redshift_cluster_id.identifier.region.redshift.amazonaws.com
  REDSHIFT_PORT: 5439
  REDSHIFT_TEMP_CRED_USER: temp_username
  REDSHIFT_TEMP_CRED_PASSWORD: temp_password
  REDSHIFT_DBUSER: redshift_db_user
  REDSHIFT_CLUSTER_ID: redshift_cluster_id
  REDSHIFT_IAM_PROFILE: default
  # Snowflake
  SNOWFLAKE_USER: username
  SNOWFLAKE_PASSWORD: password
  SNOWFLAKE_ACCOUNT: account_id.region
  SNOWFLAKE_DEFAULT_WH: null                  # Optional default warehouse
  SNOWFLAKE_DEFAULT_DB: null                  # Optional default database
  SNOWFLAKE_DEFAULT_SCHEMA: null              # Optional default schema
  SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: null      # Optional private key passphrase
  SNOWFLAKE_PRIVATE_KEY_PATH: null            # Optional private key path
  SNOWFLAKE_ROLE: null                        # Optional role name
  SNOWFLAKE_TIMEOUT: null                     # Optional timeout in seconds
  # Trino
  trino:
    catalog: postgresql                       # Change this to the catalog of your choice
    host: 127.0.0.1
    http_headers:
      X-Something: 'mage=power'
    http_scheme: http
    password: mage1337                        # Optional
    port: 8080
    schema: core_data
    session_properties:                       # Optional
      acc01.optimize_locality_enabled: false
      optimize_hash_generation: true
    source: trino-cli                         # Optional
    user: admin
    verify: /path/to/your/ca.crt              # Optional